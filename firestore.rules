rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get a user's role in a project
    function getRole(projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid];
    }
    
    // Helper function to check if a user is a member of a project
    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.roles;
    }
    
    // Helper function to check if a user is an Owner or Editor
    function isEditorOrOwner(projectId) {
      let role = getRole(projectId);
      return role == 'Owner' || role == 'Editor';
    }
    
    // Helper function to check if a user is an Owner
    function isOwner(projectId) {
      return getRole(projectId) == 'Owner';
    }
    
    // Users can manage their own user document
    match /users/{userId} {
    	allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    match /projects/{projectId} {
      // Allow any authenticated user to create a project
      allow create: if isAuthenticated();
      
      // Allow project members to read the project document
      allow read: if isAuthenticated() && isProjectMember(projectId);
      
      // Allow editors and owners to update the project
      allow update: if isAuthenticated() && isEditorOrOwner(projectId);
      
      // Only owners can delete a project
      allow delete: if isAuthenticated() && isOwner(projectId);

      // Subcollections
      match /{subcollection}/{document=**} {
        // Members can read all subcollection data
        allow read: if isAuthenticated() && isProjectMember(projectId);
        
        // Editors and Owners can create, update, and delete documents in subcollections
        allow write: if isAuthenticated() && isEditorOrOwner(projectId);
      }
    }
  }
}
