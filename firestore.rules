rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a member of a project
    function isProjectMember(projectId) {
      let uid = request.auth.uid;
      return uid != null && get(/databases/$(database)/documents/projects/$(projectId)).data.roles[uid] != null;
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // Allow any authenticated user to create a project.
      // The application logic ensures the creator is assigned the 'Owner' role.
      allow create: if request.auth != null;

      // Allow members of the project to read, update, or delete it.
      allow read, update, delete: if isProjectMember(projectId);

      // Rules for all subcollections within a project
      match /{allSubcollections}/{doc=**} {
        // Allow project members to read and write to all subcollections.
        allow read, write: if isProjectMember(projectId);
      }
    }

    // Rules for the 'users' collection (for user preferences)
    match /users/{userId} {
      // Allow users to read and write to their own document.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
