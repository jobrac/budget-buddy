rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is a member of the project
    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.roles;
    }

    // Helper function to check if the user has editor or owner role
    function isProjectEditor(projectId) {
      let userRole = get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid];
      return userRole == 'Owner' || userRole == 'Editor';
    }

    match /projects/{projectId} {
      // READ: Anyone who is a member of the project can read it.
      allow read: if request.auth != null && isProjectMember(projectId);
      
      // CREATE: A user can create a project if they are authenticated and they set themselves as the sole owner.
      allow create: if request.auth != null &&
                       request.resource.data.roles[request.auth.uid] == 'Owner' &&
                       request.resource.data.roles.size() == 1;

      // UPDATE: Only project owners and editors can update project details.
      // We also protect the 'roles' map from being tampered with by non-owners.
      allow update: if request.auth != null && isProjectEditor(projectId);

      // DELETE: Only the project owner can delete a project.
      allow delete: if request.auth != null && get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Owner';

      // --- Sub-collections ---
      match /{subcollection}/{docId} {
        // READ: Any project member can read documents in any sub-collection.
        allow read: if request.auth != null && isProjectMember(projectId);
        
        // WRITE (Create, Update, Delete): Only Owners and Editors can write to sub-collections.
        allow write: if request.auth != null && isProjectEditor(projectId);
      }
    }
    
    // Rule for user-specific data, like preferences
    match /users/{userId} {
      // Allow a user to read and write to their own document.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
