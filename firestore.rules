
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isProjectOwner(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.roles &&
             get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Owner';
    }

    function isProjectEditor(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.roles &&
             (get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Owner' ||
              get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Editor');
    }

    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.roles;
    }
    
    // User preferences can be read/written only by the user themselves
    match /users/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    match /projects/{projectId} {
      // CREATE: A user can create a project if their UID is in the roles map as 'Owner'.
      allow create: if isSignedIn() && request.resource.data.roles[request.auth.uid] == 'Owner';

      // READ: Any authenticated member of the project can read it.
      allow get: if isSignedIn() && isProjectMember(projectId);
      
      // LIST: Users can only query for projects they are a member of.
      // This is enforced by the queries in the app code (`where('roles.${user.uid}', 'in', ...)`).
      // The rule here ensures that a malicious user cannot bypass that client-side query.
      allow list: if isSignedIn();

      // UPDATE: Only Owners and Editors can update project settings.
      allow update: if isSignedIn() && isProjectEditor(projectId);

      // DELETE: Only the Owner can delete a project.
      allow delete: if isSignedIn() && isProjectOwner(projectId);

      // --- SUBCOLLECTIONS ---

      match /{subcollection}/{docId} {
        // READ: Any member can read subcollection documents.
        allow get, list: if isSignedIn() && isProjectMember(projectId);
        
        // CREATE, UPDATE, DELETE: Only Owners and Editors can modify subcollection documents.
        allow create, update, delete: if isSignedIn() && isProjectEditor(projectId);
      }
    }
  }
}
