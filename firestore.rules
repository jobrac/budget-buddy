rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is a member of a project
    function isProjectMember(projectId) {
      return request.auth != null && exists(/databases/$(database)/documents/projects/$(projectId)) &&
             get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] in ['Owner', 'Editor', 'Viewer'];
    }
    
    // Helper function to check if a user has editing rights in a project
    function isProjectEditor(projectId) {
      return request.auth != null && exists(/databases/$(database)/documents/projects/$(projectId)) &&
             get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] in ['Owner', 'Editor'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      allow read: if isProjectMember(projectId);
      
      // A user can create a project if they are logged in and they are the owner in the new document.
      allow create: if request.auth != null && request.resource.data.roles[request.auth.uid] == 'Owner';
      
      allow update: if get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Owner';
      allow delete: if get(/databases/$(database)/documents/projects/$(projectId)).data.roles[request.auth.uid] == 'Owner';

      // Rules for all subcollections within a project
      match /{subcollection}/{docId} {
        allow read: if isProjectMember(projectId);
        
        // This is the key fix: Allow category creation if the user is authenticated.
        // The project creation rule provides the primary security gate.
        // This allows the initial batch write (project + categories) to succeed.
        allow create: if subcollection == 'categories' && request.auth != null;
        
        // For other subcollections, or updates/deletes, ensure the user is an editor/owner.
        allow create, update, delete: if isProjectEditor(projectId);
      }
    }
  }
}
