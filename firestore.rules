
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getRole(rsc) {
      return rsc.data.roles[request.auth.uid];
    }
    
    function isProjectMember(rsc) {
      return isAuth() && getRole(rsc) in ['Owner', 'Editor', 'Viewer'];
    }

    function isProjectEditor(rsc) {
      return isAuth() && getRole(rsc) in ['Owner', 'Editor'];
    }

    function isProjectOwner(rsc) {
      return isAuth() && getRole(rsc) == 'Owner';
    }

    // /users/{userId}
    match /users/{userId} {
      allow read, update, delete: if isUser(userId);
      allow create: if isAuth();
    }

    // /projects/{projectId}
    match /projects/{projectId} {
      allow read: if isProjectMember(resource);
      allow create: if isAuth() && request.resource.data.roles[request.auth.uid] == 'Owner';
      allow update: if isProjectOwner(resource);
      allow delete: if isProjectOwner(resource);

      // Sub-collections
      match /{subcollection}/{docId} {
        allow read: if isProjectMember(get(/databases/$(database)/documents/projects/$(projectId)));
        allow write: if isProjectEditor(get(/databases/$(database)/documents/projects/$(projectId)));
      }
    }
  }
}
